<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.springboot.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.demo.springboot.model.Student">
    <!--
      id 主键字段，除了主键之外都是用result表示
      column 数据库中的字段名称
      property 映射对象属性名称
      jdbcTypes数据库数据类型，可以省略

      resultMap作用:
      1.当数据库中字段名称与实体类对象的属性名不一致时，可以进行转换
      2.当前查询的结果没有对应一个表的时候，可以自定义个结果集，多表联查自己组装返回结果

      数据库表字段名称 实体对象属性名称
      user_name     userName
      如果数据库中的字段由多个单词构成，通过MyBatis逆向工程生成的对象属性
      会按照驼峰命名法生成属性名称
      数据库中字段名必须使用下划线分隔
    -->
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="age" jdbcType="INTEGER" property="age"/>
  </resultMap>
  <!-- sql语句片段，将公共部分抽取出来，通过include引用，避免重复书写 -->
  <sql id="Base_Column_List">
    id
    , name, age
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from t_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.springboot.model.Student">
    insert into t_student (id, name, age)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})
  </insert>
  <!--trim拼接，prefix前缀，suffix后缀。suffixOverrides去除多余逗号-->
  <!--使用封装类型 parameterType="java.lang.Integer"，不用再判断空字符串-->
  <!--选择性插入-->
  <insert id="insertSelective" parameterType="com.demo.springboot.model.Student">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.springboot.model.Student">
    update t_student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.springboot.model.Student">
    update t_student
    set name = #{name,jdbcType=VARCHAR},
        age  = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
