<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
  <!--把对象交给spring容器，由spring容器统一创建，管理对象-->
  <!--声明目标对象-->
  <bean id="someService" class="com.xxx.ba01.Impl.SomeServiceImpl"/>
  <bean id="someService2" class="com.xxx.ba01.SomeService2"/>

  <!--声明切面类对象-->
  <bean id="myAspect" class="com.xxx.ba01.MyAspect"/>

  <!--声明自动代理生成器：使用aspectj框架内部的功能，创建目标对象的代理对象
  创建代理对象是在内存中实现的，修改目标对象的内存中结构。创建为代理对象。所以
  目标对象就是被修改后的代理对象 -->

  <!--  <aop:aspectj-autoproxy/>-->
  <!--目标类有接口,默认使用JDK动态代理,如果先用CGLIB动态代理需要配置 proxy-target-class="true" -->
  <aop:aspectj-autoproxy proxy-target-class="true"/>
  <!--aop:aspectj-autoproxy 自动代理生成器会为spring容器中的所有的目标对象创建成代理对象-->
</beans>