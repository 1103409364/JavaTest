<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
  <properties resource="db.properties"/>
  <!--
  设置与数据库交互的环境，例如配置二级缓存，配置查询延迟加载策略等
  配置是为了更加有效的查询表中的记录，实际开发中settings优化效果有限
  https://www.cnblogs.com/coloz/p/10613054.html
  海量级别的数据如何提高查询效率？
  基础操作：
    对于常用的查询条件的字段，设置索引。普通索引、位图索引等。id主键自带索引
  高级操作
    使用nosql数据库，redis缓存
  专业操作
    搜索引擎选择: Elasticsearch与Solr
    针对于电商行业
  -->
  <settings>
    <!--默认是false：关闭二级缓存-->
    <setting name="cacheEnabled" value="true"/>
  </settings>
  <!--
   为mapper映射文件中的domain起别名
   方式1：使用typeAlias标签为指定的类分别起别名
   type：要为哪个domain起别名，填写包.类名称
   方式2：使用package标签批量起别名（常用）
   别名是MyBatis自动取好的，别名为类名（不区分大小写，还是按照首字符大写）。
   name: 指定一个包（是一个目录），表示在该包（目录）中的所有domain都起好了别名
   用别名写起来方便，但是可读性降低了，不知道类在哪个包
   -->
  <typeAliases>
    <!--    <typeAlias type="com.xxx.domain.Student" alias="stu"/>-->
    <package name="com.xxx.domain"/>
    <package name="com.xxx.vo"/>
  </typeAliases>

  <environments default="development">
    <environment id="development">
      <transactionManager type="JDBC"/>
      <!-- 使用连接池，不用重复连接、关闭连接-->
      <dataSource type="POOLED">
        <!-- 配置驱动、地址、用户名、密码 可以写在配置文件中-->
        <property name="driver" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
      </dataSource>
    </environment>
  </environments>
  <!--mapper映射文件注册
  方式1：使用mapper 的 resource属性，指定mapper映射文件
  方式2：使用mapper 的 class属性，找到dao层接口的全路径
  方式3：批量注册 name属性指定dao层的包，表示在该dao包下所有文件自动注册（常用）
  -->
  <mappers>
    <!--    <mapper resource="com/xxx/dao/StudentDao.xml"/>-->
    <!--    <mapper class="com.xxx.dao.StudentDao"/>-->
    <package name="com.xxx.dao"/>
  </mappers>
</configuration>